@use "../abstracts" as *;

.button {
  display: inline-flex;
  justify-content: center;
  cursor: pointer;
  text-decoration: none;
  line-height: 1;
  font-family: $button-font-family;
  font-size: $button-font-size;
  text-transform: $button-text-transform;
  font-weight: $button-font-weight;
  padding: $button-padding;
  border: $button-border;
  border-radius: $button-border-radius;
  transition: 275ms ease;

  &[data-type="accent"] {
    background-color: $button-accent-background;
    color: $button-accent-color;

    &:is(:hover, :focus) {
      background-color: $button-accent-background-hover;
      color: $button-accent-color-hover;
    }
  }

  &[data-type="primary"] {
    background-color: $button-primary-background;
    color: $button-primary-color;

    &:is(:hover, :focus) {
      background-color: $button-primary-background-hover;
      color: $button-primary-color-hover;
    }
  }
}

.button-toggle {
  background-color: transparent;
  border-radius: 10px;
  display: block;
  height: 2px;
  position: relative;
  right: 11px;
  text-align: center;
  width: 24px;

  order: 2;
  z-index: 999;

  & > input[type="checkbox"] {
    display: none;
  }

  span {
    &::before,
    &::after {
      background-color: black;
      border-radius: 1px;
      content: "";
      height: 100%;
      position: absolute;
      transition: all 500ms ease-out;
      width: 100%;
    }

    &::before {
      top: 5px;
    }
    &::after {
      top: -5px;
    }
  }

  & > input[type="checkbox"]:checked ~ span {
    &::before {
      top: 0;
      transform: rotate(-135deg);
    }
    &::after {
      top: 0;
      transform: rotate(135deg);
    }
  }
}
